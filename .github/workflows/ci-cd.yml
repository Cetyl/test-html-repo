name: Deploy to ECS

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build Docker image
      run: |
        docker build -t my-web-app .

    - name: Authenticate Docker to ECR
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin your-account-id.dkr.ecr.your-aws-region.amazonaws.com

    - name: Tag Docker image
      run: |
        docker tag my-web-app:latest your-account-id.dkr.ecr.your-aws-region.amazonaws.com/my-web-app:latest

    - name: Push Docker image to ECR
      run: |
        docker push your-account-id.dkr.ecr.your-aws-region.amazonaws.com/my-web-app:latest

    - name: Update ECS service
      run: |
        # Update ECS service to use the new image
        ecs-cli configure --cluster your-cluster-name --default-launch-type FARGATE --config-name your-config-name
        ecs-cli compose --file docker-compose.yml up
        aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment

    - name: Clean up Docker images
      run: |
        docker system prune -af
